{"version":3,"sources":["foo.txt","Chords/MajorScale.js","Chords/Chord.js","Chords/Chords.js","Chords/ChordProgression.js","Piano/Samples.js","Piano/Piano.js","Drums/Kick.js","Drums/Snare.js","Drums/Hat.js","Drums/Noise.js","Chords/Keys.js","Chords/IntervalWeights.js","Components/Player.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","singleOct","doubleOct","concat","_toConsumableArray","map","n","fiveToFive","slice","Chord","degree","intervals","nextChordIdxs","_classCallCheck","this","semitoneDist","_createClass","key","value","Math","floor","random","length","size","voicing","sort","i","unshift","toChordIdxs","arr","Chords","ChordProgression","progression","chord","push","nextChordIdx","octaves","samplePath","process","notes","forEach","letter","octave","samples","note","noteFilename","includes","replace","lpf","Tone","sw","Piano","cb","sampler","Samples","chain","C4","vol","Kick","Snare","Hat","noise","keys","intervalWeights","filelasttext","cmp","threshold","ratio","attack","release","bpm","swing","Player","_Component","props","_this","_possibleConstructorReturn","_getPrototypeOf","call","nextChord","fetch","raw","then","r","text","console","log","nextProgress","state","progress","nextKickOff","nextSnareOff","nextHatOff","nextMelodyDensity","nextMelodyOff","setState","_objectSpread","kickOff","snareOff","hatOff","melodyDensity","melodyOff","playChord","root","transpose","generateVoicing","harmonize","f","toNote","pn","triggerAttackRelease","playMelody","descendRange","min","scalePos","ascendRange","scale","descend","ascend","weights","sum","reduce","prev","curr","w","randomWeight","scaleDist","found","scalePosChange","newScalePos","generateProgression","newKey","Keys","newScale","newProgression","generate","genChordsOnce","toggle","stop","toggleWakeLock","start","chords","melody","kickLoop","snareLoop","hatLoop","pianoLoaded","kickLoaded","snareLoaded","hatLoaded","contextStarted","activate","kick","snare","hat","Noise","time","triggerAttack","humanize","bind","_assertThisInitialized","_inherits","currentState","active","_this2","progressionList","idx","React","createElement","className","prep","onClick","playable","toLowerCase","buttonText","buttonStyle","backgroundColor","color","toggleClass","style","Component","App","_useWakeLock","useWakeLock","wakeLockActive","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ac6f2054.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foo.152595c5.txt\";","export const singleOct = [0,2,4,5,7,9,11];\nexport const doubleOct = [...singleOct, ...singleOct.map(n=>n+12)];\nexport const tripleOct = [...doubleOct, ...singleOct.map(n=>n+24)];\nexport const fiveToFive = [...singleOct.map(n=>n-12).slice(4), ...singleOct, ...singleOct.map(n=>n+12).slice(0,5)];\n","import { singleOct } from './MajorScale';\n\nclass Chord {\n    constructor(degree,intervals,nextChordIdxs) {\n        this.degree = degree;\n        this.semitoneDist = singleOct[degree-1];\n        this.intervals = intervals;\n        this.nextChordIdxs = nextChordIdxs;\n    }\n    \n    degree() {\n    \treturn this.degree;\n    }\n\n    semitoneDist() {\n        return this.semitoneDist;\n    }\n\n    intervals() {\n        return this.intervals;\n    }\n\n    nextChordIdxs() {\n        return this.nextChordIdxs;\n    }\n\n    nextChordIdx() {\n        return this.nextChordIdxs[Math.floor(Math.random()*this.nextChordIdxs.length)];\n    }\n\n    generateVoicing(size) {\n        if(size<3)\n            return this.intervals.slice(0,3);\n        let voicing = this.intervals.slice(1,size);\n        voicing.sort(() => Math.random()-0.5);\n        for(let i = 1; i<voicing.length; i++) {\n            while(voicing[i] < voicing[i-1]){\n                voicing[i] += 12;\n            }\n        }\n        voicing.unshift(0);\n        return voicing;\n    }\n\n    generateMode() {\n        return this.intervals.map(n => {\n            if(n>=12)\n                return n-12;\n            else\n                return n;\n        });\n    }\n}\n\nexport default Chord;","import Chord from './Chord';\n\nconst toChordIdxs = (arr) => arr.map(n => n-1);\n\nconst I = new Chord(\n\t1,\n    [0,4,7,11,14,17,21],\n    toChordIdxs([2,3,4,5,6,7])\n);\nconst ii = new Chord(\n\t2,\n    [0,3,7,10,14,17,21],\n    toChordIdxs([3,5,7])\n);\nconst iii = new Chord(\n\t3,\n    [0,3,7,10,13,17,20],\n    toChordIdxs([4,6])\n);\nconst IV = new Chord(\n\t4,\n    [0,4,7,11,14,18,21],\n    toChordIdxs([2,5])\n);\nconst V = new Chord(\n\t5,\n    [0,4,7,10,14,17,21],\n    toChordIdxs([1,3,6])\n);\nconst vi = new Chord(\n\t6,\n    [0,3,7,10,14,17,20],\n    toChordIdxs([2,4])\n);\nconst vii = new Chord(\n\t7,\n    [0,3,6,10,13,17,20],\n    toChordIdxs([1,3])\n);\n\nconst Chords = [I,ii,iii,IV,V,vi,vii];\n\nexport default Chords;","import Chords from './Chords';\nimport Chord from './Chord';\n\nclass ChordProgression {\n    static generate(length) {\n        if(length < 2)\n            return null;\n\n        const progression = [];\n        let chord = Chords[Math.floor(Math.random()*Chords.length)];\n        \n        for(let i = 0; i < length; i++) {\n            progression.push(new Chord(\n                chord.degree,\n                [...chord.intervals],\n                [...chord.nextChordIdxs]));\n            chord = Chords[chord.nextChordIdx()];\n        }\n        \n        return progression;\n    }\n}\n\nexport default ChordProgression;","const letters = [\"A\",\"C\",\"D#\",\"F#\"];\nconst octaves = [1, 2, 3, 4, 5, 6];\nconst samplePath = `${process.env.PUBLIC_URL}/PianoSamples/`;\nconst velocity = 1;\n\nconst notes = [];\n\nletters.forEach(letter => {\n    octaves.forEach(octave => {\n        notes.push(letter+octave);\n    });\n});\n\nconst samples = {};\n\nnotes.forEach(note => {\n    let noteFilename = note;\n    if(note.includes(\"#\")) {\n        noteFilename = note.replace(\"#\",\"sharp\");\n    }\n    samples[note] = `${samplePath+noteFilename}v${velocity}.mp3`;\n});\n\nexport default samples;","import * as Tone from 'tone';\nimport Samples from './Samples';\n\nconst lpf = new Tone.Filter(1000, \"lowpass\");\nconst sw = new Tone.StereoWidener(0.5);\n\nclass Piano {\n\tconstructor(cb) {\n\t\tthis.sampler = new Tone.Sampler(Samples, () => {\n\t\t\tcb();\n\t\t}).chain(lpf,sw,Tone.Master);\n\t}\n\n\tsampler() {\n\t\treturn this.sampler;\n\t}\n}\n\nexport default Piano;","import * as Tone from 'tone';\n\nconst samplePath = `${process.env.PUBLIC_URL}/DrumSamples/kick.mp3`;\nconst samples = {C4: samplePath};\n\nconst vol = new Tone.Volume(-3);\n\nclass Kick {\n\tconstructor(cb) {\n\t\tthis.sampler = new Tone.Sampler(samples, () => {\n\t\t\tcb();\n\t\t}).chain(vol,Tone.Master);\n\t}\n\n\tsampler() {\n\t\treturn this.sampler;\n\t}\n}\n\nexport default Kick;","import * as Tone from 'tone';\n\nconst samplePath = `${process.env.PUBLIC_URL}/DrumSamples/snare.mp3`;\nconst samples = {C4: samplePath};\n\nconst lpf = new Tone.Filter(6000, \"lowpass\");\nconst vol = new Tone.Volume(-6);\nconst sw = new Tone.StereoWidener(0.3);\n\nclass Snare {\n\tconstructor(cb) {\n\t\tthis.sampler = new Tone.Sampler(samples, () => {\n\t\t\tcb();\n\t\t}).chain(lpf,vol,sw,Tone.Master);\n\t}\n\n\tsampler() {\n\t\treturn this.sampler;\n\t}\n}\n\nexport default Snare;","import * as Tone from 'tone';\n\nconst samplePath = `${process.env.PUBLIC_URL}/DrumSamples/hat.mp3`;\nconst samples = {C4: samplePath};\n\nconst lpf = new Tone.Filter(2400, \"lowpass\");\nconst vol = new Tone.Volume(-9);\nconst sw = new Tone.StereoWidener(0.7);\n\nclass Hat {\n\tconstructor(cb) {\n\t\tthis.sampler = new Tone.Sampler(samples, () => {\n\t\t\tcb();\n\t\t}).chain(lpf,vol,sw,Tone.Master);\n\t}\n\n\tsampler() {\n\t\treturn this.sampler;\n\t}\n}\n\nexport default Hat;","import * as Tone from 'tone';\n\nconst lpf = new Tone.Filter(2000, \"lowshelf\");\nconst vol = new Tone.Volume(-32);\nconst noise = new Tone.Noise(\"pink\").chain(lpf,vol,Tone.Master);\n\nexport default noise;","const keys = [\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"];\n\nexport default keys;","const intervalWeights = [0.10, 0.30, 0.20, 0.15, 0.15, 0.025, 0.025, 0.05];\n\nexport default intervalWeights;","import React, {Component} from 'react';\nimport * as Tone from 'tone';\nimport ChordProgression from '../Chords/ChordProgression';\nimport Piano from '../Piano/Piano';\nimport Kick from '../Drums/Kick';\nimport Snare from '../Drums/Snare';\nimport Hat from '../Drums/Hat';\nimport Noise from '../Drums/Noise';\nimport Keys from '../Chords/Keys';\nimport {fiveToFive} from '../Chords/MajorScale';\nimport intervalWeights from '../Chords/IntervalWeights';\n\n\n\nimport raw from '../foo.txt';\nvar filelasttext = \"\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst cmp = new Tone.Compressor({\n\t\"threshold\" : -6,\n\t\"ratio\" : 3,\n\t\"attack\" : 0.5,\n\t\"release\" : 0.1\n});\nconst lpf = new Tone.Filter(2000, \"lowpass\");\nconst vol = new Tone.Volume(-6);\nTone.Master.chain(cmp,lpf,vol);\nTone.Transport.bpm.value = 156;\nTone.Transport.swing = 1;\n\nclass Player extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            key: \"C\",\n            progression: [],\n            scale: [],\n            progress: 0,\n\n            pianoLoaded: false,\n            kickLoaded: false,\n            snareLoaded: false,\n            hatLoaded: false,\n\n            contextStarted: false,\n            genChordsOnce: false,\n\n            kickOff: false,\n            snareOff: false,\n            hatOff: false,\n            melodyDensity: 0.33,\n            melodyOff: false,\n\t\t\t\n            scalePos: 0,\n\t\t\tactivate: false,\n        }\n\n        this.pn = new Piano(() => this.setState({...this.state, pianoLoaded: true})).sampler;\n        this.kick = new Kick(() => this.setState({...this.state, kickLoaded: true})).sampler;\n        this.snare = new Snare(() => this.setState({...this.state, snareLoaded: true})).sampler;\n        this.hat = new Hat(() => this.setState({...this.state, hatLoaded: true})).sampler;\n        this.noise = Noise;\n\n        this.chords = new Tone.Sequence((time,note) => {\n            this.playChord();\n        }, [\"\"], \"1n\");\n        this.melody = new Tone.Sequence((time,note) => {\n            this.playMelody();\n        }, [\"\"], \"8n\");\n\n        this.kickLoop = new Tone.Sequence((time,note) => {\n            if(!this.state.kickOff) {\n                if(note===\"C4\" && Math.random()<0.9) {\n                    this.kick.triggerAttack(note);\n                } else if(note===\".\" && Math.random()<0.1) {\n                    this.kick.triggerAttack(\"C4\");\n                }\n            }\n        }, [\"C4\",\"\",\"\",\"\", \"\",\"\",\"\",\"C4\", \"C4\",\"\",\".\",\"\", \"\",\"\",\"\",\"\"],\"8n\");\n\n        this.snareLoop = new Tone.Sequence((time,note) => {\n            if(!this.state.snareOff) {\n                if(note!==\"\" && Math.random()<0.80) {\n                    this.snare.triggerAttack(note);\n                }\n            }\n        }, [\"\",\"C4\"], \"2n\");\n\n        this.hatLoop = new Tone.Sequence((time,note) => {\n            if(!this.state.hatOff) {\n                if(note!==\"\" && Math.random()<0.80) {\n                    this.hat.triggerAttack(note);\n                }\n            }\n        }, [\"C4\",\"C4\",\"C4\",\"C4\",\"C4\",\"C4\",\"C4\",\"C4\"], \"4n\");\n        \n        this.chords.humanize = true;\n        this.melody.humanize = true;\n        this.kickLoop.humanize = true;\n        this.snareLoop.humanize = true;\n        this.hatLoop.humanize = true;\n\n        this.nextChord = this.nextChord.bind(this);\n        this.playChord = this.playChord.bind(this);\n        this.playMelody = this.playMelody.bind(this);\n        this.generateProgression = this.generateProgression.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    nextChord = () => {\n\t\t\nfetch(raw)\n .then(r => r.text())\n .then(text => {\n\t if(filelasttext != text){\n\t\t console.log('changed:', text);\n\t\t filelasttext = text;\n\t }else{\n\t\t console.log('same:', text);\n\t }\n  \n});\n\t\t\n        const nextProgress = this.state.progress === this.state.progression.length-1 ? 0 : this.state.progress+1;\n        const nextKickOff = Math.random()<0.15;\n        const nextSnareOff = Math.random()<0.20;\n        const nextHatOff = Math.random()<0.25;\n        const nextMelodyDensity = Math.random()*0.3+0.2;\n        const nextMelodyOff = Math.random()<0.25;\n\n        if(this.state.progress===4) {\n            this.setState({...this.state,\n                progress: nextProgress,\n                kickOff: nextKickOff,\n                snareOff: nextSnareOff,\n                hatOff: nextHatOff\n            });\n        } else if (this.state.progress===0) {\n            this.setState({...this.state,\n                progress: nextProgress,\n                kickOff: nextKickOff,\n                snareOff: nextSnareOff,\n                hatOff: nextHatOff,\n                melodyDensity: nextMelodyDensity,\n                melodyOff: nextMelodyOff\n            });  \n        } else {\n            this.setState({...this.state,\n                progress: nextProgress,\n            });\n        }\n        \n    }\n\n    playChord = () => {\n        const chord = this.state.progression[this.state.progress];\n        const root = Tone.Frequency(this.state.key+\"3\").transpose(chord.semitoneDist);\n        const size = 4;\n        const voicing = chord.generateVoicing(size);\n        const notes = Tone.Frequency(root).harmonize(voicing).map(f => Tone.Frequency(f).toNote());\n        //this.pn.context._context.resume();\n        this.pn.triggerAttackRelease(notes,\"1n\");\n        this.nextChord();\n    }\n\n    playMelody = () => {\n        // const chord = this.state.progression[this.state.progress];\n        // const root = Tone.Frequency(this.state.key+\"5\").transpose(chord.semitoneDist);\n        // const scale = chord.generateMode();\n        // const notes = Tone.Frequency(root).harmonize(scale).map(f => Tone.Frequency(f).toNote());\n        // const noteIdx = Math.floor(Math.random()*notes.length);\n        // if(Math.random()<this.state.melodyDensity)\n        //     this.pn.triggerAttack(notes[noteIdx]);\n\n        if(this.state.melodyOff || !(Math.random()<this.state.melodyDensity)) {\n            return;\n        }\n\n        const descendRange = Math.min(this.state.scalePos,7) + 1;\n        const ascendRange = Math.min(this.state.scale.length - this.state.scalePos,7);\n\n        let descend = descendRange > 1;\n        let ascend = ascendRange > 1;\n\n        if(descend && ascend) {\n            if(Math.random()>0.5) {\n                ascend = !descend;\n            } else {\n                descend = !ascend;\n            }\n        }\n\n        let weights = descend ? intervalWeights.slice(0,descendRange) : intervalWeights.slice(0,ascendRange);\n\n        const sum = weights.reduce((prev,curr) => prev+curr, 0);\n        weights = weights.map(w => w/sum);\n        for(let i = 1; i < weights.length; i++) {\n            weights[i] += weights[i-1];\n        }\n\n        const randomWeight = Math.random();\n        let scaleDist = 0;\n        let found = false;\n        while(!found) {\n            if(randomWeight <= weights[scaleDist]) {\n                found = true;\n            }\n            else {\n                scaleDist++;\n            }\n        }\n\n        const scalePosChange = descend ? -scaleDist : scaleDist;\n        const newScalePos = this.state.scalePos + scalePosChange;\n\n        this.setState({\n            ...this.state,\n            scalePos: newScalePos,\n        })\n\n        this.pn.triggerAttackRelease(this.state.scale[newScalePos],\"2n\");\n    }\n\n    generateProgression = () => {\n        const scale = fiveToFive;\n        const newKey = Keys[Math.floor(Math.random()*Keys.length)];\n        const newScale = Tone.Frequency(newKey+\"5\").harmonize(scale).map(f => Tone.Frequency(f).toNote());\n        const newProgression = ChordProgression.generate(8);\n        const newScalePos = Math.floor(Math.random()*scale.length);\n\n        this.setState({\n            ...this.state,\n            key: newKey, \n            progress: 0, \n            progression: newProgression,\n            scale: newScale,\n            genChordsOnce: true,\n            scalePos: newScalePos,\n        });\n    }\n\n    toggle = () => {\n        this.setState({...this.state, progress: 0});\n        if(Tone.Transport.state === \"started\") {\n            this.noise.stop();\n            Tone.Transport.stop();\n            this.props.toggleWakeLock();\n        }\n        else {\n            Tone.start();\n            Tone.Transport.start();\n            \n\t\t\t//deep tone tisssssss\n\t\t\tthis.noise.start(0);\n            \n\t\t\t\n\t\t\t\n\t\t\tthis.chords.start(0);\n            this.melody.start(0);\n            this.kickLoop.start(0);\n            this.snareLoop.start(0);\n            this.hatLoop.start(0);\n            this.props.toggleWakeLock();\n        }\n    }\n    toggleClass() {\n\t\t\n        const currentState = this.state.active;\n        this.setState({ active: !currentState });\n\t\tif(currentState){\n\t\t\tthis.noise.start(0);\n\t\t}else{\n\t\t\tthis.noise.stop(0);\n\t\t}\n    };\n    render() {\n        const progressionList = this.state.progression.map((chord,idx) => {\n            return (\n            <li className={idx===(this.state.progress+7)%8 ? \"live\" : \"\"} key={idx}>\n                {chord.degree}\n            </li>\n        )});\n\n        const prep = (\n            <div className=\"prep\">\n                <div className=\"sampleLoad\">\n                    {!(this.state.pianoLoaded && this.state.kickLoaded && this.state.snareLoaded && this.state.hatLoaded) ?\n                        \"loAding sAmples\" :\n                        this.state.contextStarted ? \"\" : \n                            <button\n                                className=\"contextBtn\"\n                                onClick={() => {\n                                    Tone.start();\n                                    this.setState({...this.state, contextStarted: true});\n                                }}\n                            >\n                                stArt Audio context\n                            </button>}\n                </div>\n            </div>\n        );\n\n        const playable = (\n            <div className=\"playable\">\n                <button \n                    className=\"generateBtn\"\n                    onClick={this.generateProgression}>\n                        generAte cHords\n                </button>\n                {!(this.state.genChordsOnce) ? \"\" : \n                    <div>\n                        <div className=\"info\">\n                            <h3 className=\"key\">{this.state.key.toLowerCase()}</h3>\n                            <ol className=\"progressionList\">{progressionList}</ol>\n                        </div>\n                        \n                        <button \n                            className=\"playBtn\"\n                            onClick={this.toggle}>\n                                {Tone.Transport.state===\"started\" ? \"stop\" : \"plAy\"}\n                        </button>\n                    </div>\n                }\n            </div>\n        );\n\n    const buttonText = this.state.active ? \"Disabled Noise Sound\" : \"Enabled Noise Sound\";\n\t    const buttonStyle = this.state.active\n      ? { backgroundColor: \"#220000\", color: \"white\" }\n      : { backgroundColor: \"#002200\", color: \"white\" };\n\n\n        return (\n            <div>\n                <div className=\"content\">\n                    <div className=\"instructions\">\n                        <ol>\n                            {!(this.state.pianoLoaded && this.state.kickLoaded && this.state.snareLoaded && this.state.hatLoaded) ?\n                                <li>WAit for sAmples to loAd</li> : \"\"}\n                            {!(this.state.contextStarted) ? \n                                <li>stArt Audio context</li> : \"\"}\n                        </ol>\n                    </div>\n                    {this.state.pianoLoaded && this.state.kickLoaded && this.state.snareLoaded && this.state.hatLoaded &&\n                        this.state.contextStarted ? playable : prep}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n    <button className={this.state.active && 'active'}\n      onClick={this.toggleClass.bind(this)} style={buttonStyle}>{buttonText}</button>\n\t\t\t\t\t\t\n                </div>\n                <section className=\"backdrop\"></section>\n            </div>\n        );\n    }\n}\n\nexport default Player;","import React from 'react';\nimport { useWakeLock } from \"use-wake-lock\";\nimport './App.css';\nimport Player from './Components/Player';\n\n\n\n\n\nconst App = (props) => {\n\n  const { toggleWakeLock, wakeLockActive } = useWakeLock();\n\n  return (\n    <div className=\"App\">\n      <Player toggleWakeLock={toggleWakeLock}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}